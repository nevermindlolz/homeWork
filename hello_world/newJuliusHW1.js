function Task(id, title) {
    this.id = id;
    this.title = title;
    this.isCompleted = false
}

Task.prototype.toggleComplete = function () {
    console.log(`üîÑ –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞`)
    this.isCompleted = !this.isCompleted
};

function User(id, name) {
    this.id = id;
    this.name = name;
    this.tasks = []
}

User.prototype.addTask = function (task) {
    console.log(`‚úÖ –∑–∞–¥–∞—á–∞ "${task.title}" –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${this.name}`)
    return this.tasks.push(task)
}

User.prototype.getTasks = function () {
    console.log(`\nüìÑ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á:\n`, this.tasks)
    const taskFilter = this.tasks.filter(elem => elem.isCompleted === false)
    console.log(`\nüìÑ —Å–ø–∏—Å–æ–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n`, taskFilter)
}

User.prototype.removeTask = function (taskId) {
    if (taskId >= this.tasks.length ) {
        console.error('‚ùå –û—à–∏–±–∫–∞! —ç—Ç—É –∑–∞–¥–∞—á—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, —Ç.–∫. —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
    }
    else {
        removed = this.tasks.filter(elem => elem.id === taskId)
        console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ! –∑–∞–¥–∞—á–∞ "${removed.map(elem => elem.title)}" –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.`,)
    }
}

const task1 = new Task(1, '–ü–æ–º—ã—Ç—å –ø–æ–ø—É')
const task2 = new Task(2, '–ü–æ–±—Ä–∏—Ç—å –ñ–æ–ø—É')
const task3 = new Task(3, '—Å—ã–≥—Ä–∞—Ç—å –≤ –¥–æ—Ç—É')

const user1 = new User(23, 'Julik')

task2.toggleComplete()

user1.addTask(task1)
user1.addTask(task2)
user1.addTask(task3)

user1.removeTask(1)
user1.removeTask(4)

user1.getTasks()


//gitt





